var documenterSearchIndex = {"docs":
[{"location":"home/","page":"Home","title":"Home","text":"CurrentModule = SMCsamplers","category":"page"},{"location":"home/#SMCsamplers.jl","page":"Home","title":"SMCsamplers.jl","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"Documentation for SMCsamplers.","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"Modules = [SMCsamplers]","category":"page"},{"location":"home/#SMCsamplers.FFBS-NTuple{9, Any}","page":"Home","title":"SMCsamplers.FFBS","text":"FFBS(U, Y, A, B, C, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model:\n\nyₜ = Cxₜ + εₜ,           εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀. A, C, Σₑ and Σₙ can be deterministically time-varying by passing 3D arrays of size n×n×T.\n\nNote: This is generating a single draw from the joint smoothing posterior. Typically used as a step in a Gibbs sampler.\n\n\n\n\n\n","category":"method"},{"location":"home/#SMCsamplers.FFBS_unscented-NTuple{10, Any}","page":"Home","title":"SMCsamplers.FFBS_unscented","text":"FFBS_unscented(U, Y, A, B, C, Cargs, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model with nonlinear measurement equation:\n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nC(xₜ) is a non-linear function\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀\n\n\n\n\n\n","category":"method"},{"location":"home/#SMCsamplers.FFBSx-NTuple{11, Any}","page":"Home","title":"SMCsamplers.FFBSx","text":"FFBSx(U, Y, A, B, C, ∂C, Cargs, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model with nonlinear measurement equation:\n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nC(xₜ) is a non-linear function that we can ForwardDiff.jl to get the Jacobian\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀\n\n\n\n\n\n","category":"method"},{"location":"home/#SMCsamplers.PGASsampler","page":"Home","title":"SMCsamplers.PGASsampler","text":"PGASsampler(y, θ, nDraws, N, prior, transition, observation, \n    initproposal = prior, resampler = systematic)\n\nUses the PGAS algorithm with N particles to simulate nDraws from the joint smoothing posterior of the state xₜ in the state space model determined by the three functions (that all return distributions):\n\nprior is the prior for the initial state p(x₁) \ntransition is the transition density p(xₜ | xₜ₋₁)\nobservation is the observation density p(yₜ | xₜ)\n\nθ is a struct with all the parameters in the model needed to evaluate the prior, transition and observation densities.\n\ninitproposal is the proposal distribution for x₁ and resampler is the resampling function which defaults to systematic resampling.\n\n\n\n\n\n","category":"function"},{"location":"home/#SMCsamplers.PGASupdate","page":"Home","title":"SMCsamplers.PGASupdate","text":"PGASupdate(y, p, N, θ, prior, transition, observation, \n    initproposal, resampler, Xref = nothing)\n\nSingle update step of the PGAS algorithm with N particles to simulate from the joint smoothing posterior of the state xₜ in the state space model determined by the three functions (that all return distributions):\n\nprior is the prior for the initial state p(x₁) \ntransition is the transition density p(xₜ | xₜ₋₁)\nobservation is the observation density p(yₜ | xₜ)\n\nθ is a struct with all the parameters in the model needed to evaluate the prior, transition and observation densities.\n\ninitproposal is the proposal distribution for x₁ and resampler is the resampling function which defaults to systematic resampling.\n\nXref is a p×T matrix with conditioning particle path - if nothing, unconditional PF is run\n\n\n\n\n\n","category":"function"},{"location":"home/#SMCsamplers.kalmanfilter_update-NTuple{9, Any}","page":"Home","title":"SMCsamplers.kalmanfilter_update","text":"kalmanfilter_update(μ, Ω, u, y, A, B, C, Σₑ, Σₙ)\n\nA single Kalman filter update at time t of the state space model: \n\nyₜ = Cxₜ + εₜ,           εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere xₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.\n\n\n\n\n\n","category":"method"},{"location":"home/#SMCsamplers.kalmanfilter_update_extended-Tuple{Any, Any, Any, Any, Any, Any, Function, Function, Any, Any, Any}","page":"Home","title":"SMCsamplers.kalmanfilter_update_extended","text":"kalmanfilter_update_extended(μ, Ω, u, y, A, B, C, ∂C, Cargs, Σₑ, Σₙ)\n\nA single extended Kalman filter update at time t of the state space model: \n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere C(xₜ) is a non-linear measurement function\n\nxₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.\n\n\n\n\n\n","category":"method"},{"location":"home/#SMCsamplers.kalmanfilter_update_unscented-Tuple{Any, Any, Any, Any, Any, Any, Function, Vararg{Any, 6}}","page":"Home","title":"SMCsamplers.kalmanfilter_update_unscented","text":"kalmanfilter_update_unscented(μ, Ω, u, y, A, B, C, Cargs, Σₑ, Σₙ)\n\nA single unscented Kalman filter update at time t of the state space model: \n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere C(xₜ) is a non-linear measurement function\n\nxₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.4\n\n\n\n\n\n","category":"method"},{"location":"FFBS/","page":"FFBS","title":"FFBS","text":"FFBS\nFFBSx\nFFBS_unscented","category":"page"},{"location":"FFBS/#SMCsamplers.FFBS","page":"FFBS","title":"SMCsamplers.FFBS","text":"FFBS(U, Y, A, B, C, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model:\n\nyₜ = Cxₜ + εₜ,           εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀. A, C, Σₑ and Σₙ can be deterministically time-varying by passing 3D arrays of size n×n×T.\n\nNote: This is generating a single draw from the joint smoothing posterior. Typically used as a step in a Gibbs sampler.\n\n\n\n\n\n","category":"function"},{"location":"FFBS/#SMCsamplers.FFBSx","page":"FFBS","title":"SMCsamplers.FFBSx","text":"FFBSx(U, Y, A, B, C, ∂C, Cargs, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model with nonlinear measurement equation:\n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nC(xₜ) is a non-linear function that we can ForwardDiff.jl to get the Jacobian\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀\n\n\n\n\n\n","category":"function"},{"location":"FFBS/#SMCsamplers.FFBS_unscented","page":"FFBS","title":"SMCsamplers.FFBS_unscented","text":"FFBS_unscented(U, Y, A, B, C, Cargs, Σₑ, Σₙ, μ₀, Σ₀)\n\nForward filtering and backward sampling a single draw from the joint smoothing posterior  p(x1,...xT | y1,...,yT) of the state space model with nonlinear measurement equation:\n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation\n\nxₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere\n\nC(xₜ) is a non-linear function\n\nxₜ is the n-dim state\n\nuₜ is the m-dim control\n\nyₜ is the k-dim observed data. \n\nThe observed data observations are the rows of the T×k matrix Y The control signals are the rows of the T×m matrix U μ₀ and Σ₀ are the mean and covariance of the initial state vector x₀\n\n\n\n\n\n","category":"function"},{"location":"KalmanFilters/","page":"-","title":"-","text":"kalmanfilter_update\nkalmanfilter_update_extended\nkalmanfilter_update_unscented","category":"page"},{"location":"KalmanFilters/#SMCsamplers.kalmanfilter_update","page":"-","title":"SMCsamplers.kalmanfilter_update","text":"kalmanfilter_update(μ, Ω, u, y, A, B, C, Σₑ, Σₙ)\n\nA single Kalman filter update at time t of the state space model: \n\nyₜ = Cxₜ + εₜ,           εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere xₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.\n\n\n\n\n\n","category":"function"},{"location":"KalmanFilters/#SMCsamplers.kalmanfilter_update_extended","page":"-","title":"SMCsamplers.kalmanfilter_update_extended","text":"kalmanfilter_update_extended(μ, Ω, u, y, A, B, C, ∂C, Cargs, Σₑ, Σₙ)\n\nA single extended Kalman filter update at time t of the state space model: \n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere C(xₜ) is a non-linear measurement function\n\nxₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.\n\n\n\n\n\n","category":"function"},{"location":"KalmanFilters/#SMCsamplers.kalmanfilter_update_unscented","page":"-","title":"SMCsamplers.kalmanfilter_update_unscented","text":"kalmanfilter_update_unscented(μ, Ω, u, y, A, B, C, Cargs, Σₑ, Σₙ)\n\nA single unscented Kalman filter update at time t of the state space model: \n\nyₜ = C(xₜ) + εₜ,         εₜ ~ N(0,Σₑ)         Measurement equation xₜ = Axₜ₋₁+ Buₜ + ηₜ,    ηₜ ~ N(0,Σₙ)         State equation\n\nwhere C(xₜ) is a non-linear measurement function\n\nxₜ is the n-dim state uₜ is the m-dim control yₜ is the k-dim observed data. \n\nReference: Thrun, Burgard and Fox (2006). Probabilistic Robotics, Algorithm Kalman_filter in Table 3.4\n\n\n\n\n\n","category":"function"},{"location":"ParticleGibbs/","page":"Particle Gibbs","title":"Particle Gibbs","text":"PGASsampler\nPGASupdate","category":"page"},{"location":"ParticleGibbs/#SMCsamplers.PGASsampler","page":"Particle Gibbs","title":"SMCsamplers.PGASsampler","text":"PGASsampler(y, θ, nDraws, N, prior, transition, observation, \n    initproposal = prior, resampler = systematic)\n\nUses the PGAS algorithm with N particles to simulate nDraws from the joint smoothing posterior of the state xₜ in the state space model determined by the three functions (that all return distributions):\n\nprior is the prior for the initial state p(x₁) \ntransition is the transition density p(xₜ | xₜ₋₁)\nobservation is the observation density p(yₜ | xₜ)\n\nθ is a struct with all the parameters in the model needed to evaluate the prior, transition and observation densities.\n\ninitproposal is the proposal distribution for x₁ and resampler is the resampling function which defaults to systematic resampling.\n\n\n\n\n\n","category":"function"},{"location":"ParticleGibbs/#SMCsamplers.PGASupdate","page":"Particle Gibbs","title":"SMCsamplers.PGASupdate","text":"PGASupdate(y, p, N, θ, prior, transition, observation, \n    initproposal, resampler, Xref = nothing)\n\nSingle update step of the PGAS algorithm with N particles to simulate from the joint smoothing posterior of the state xₜ in the state space model determined by the three functions (that all return distributions):\n\nprior is the prior for the initial state p(x₁) \ntransition is the transition density p(xₜ | xₜ₋₁)\nobservation is the observation density p(yₜ | xₜ)\n\nθ is a struct with all the parameters in the model needed to evaluate the prior, transition and observation densities.\n\ninitproposal is the proposal distribution for x₁ and resampler is the resampling function which defaults to systematic resampling.\n\nXref is a p×T matrix with conditioning particle path - if nothing, unconditional PF is run\n\n\n\n\n\n","category":"function"},{"location":"#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"","category":"page"}]
}
